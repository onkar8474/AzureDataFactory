{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "empdata"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "employeedata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "finaloutputofmapping"
				}
			],
			"transformations": [
				{
					"name": "joinempandemployee"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as string,",
				"          LastName as string,",
				"          FirstName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> empdata",
				"source(output(",
				"          ID as string,",
				"          Address as string,",
				"          City as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employeedata",
				"empdata, employeedata join(empdata@ID == employeedata@ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinempandemployee",
				"joinempandemployee sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ID = empdata@ID,",
				"          LastName,",
				"          FirstName,",
				"          Address,",
				"          City",
				"     )) ~> finaloutputofmapping"
			]
		}
	}
}